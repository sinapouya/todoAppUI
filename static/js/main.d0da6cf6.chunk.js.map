{"version":3,"sources":["logo.svg","components/todo/Constants.js","api/todo/MessageService.js","api/todo/TodoService.js","components/todo/AuthenticationService.js","components/todo/TodosComponent.jsx","components/todo/TodoComponent.jsx","components/todo/HeaderComponent.jsx","components/todo/LogOutComponent.jsx","components/todo/LogInComponent.jsx","components/todo/FooterComponent.jsx","components/todo/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","axios","get","userName","todoId","delete","todo","put","post","username","password","sessionStorage","setItem","this","setupAxiosInterceptor","createToken","token","createJWTToken","getItem","removeItem","headers","authorization","window","btoa","interceptors","request","use","config","TodosComponent","deleteTodo","AuthenticationService","getLoggedInUserName","TodoService","then","setState","message","finally","retriveAllTodos","updateTodo","console","log","props","history","push","state","todoes","response","data","className","map","item","key","id","description","done","toString","targetDate","Button","onClick","insertTodo","Component","TodoComponent","submitForm","values","authenticationService","todoService","createTodo","validate","errors","length","moment","isValid","match","params","Date","format","retriveTodo","initialValues","onSubmit","validateOnBlur","validateOnChange","enableReinitialize","style","border","name","component","display","type","HeaderComponent","homeActive","todoActive","loginActive","logoutActive","toggleLink","event","target","logout","to","LogOutComponent","LogInComponent","handleChanged","value","loginClicked","executeJWTAuthenticateService","showSuccessful","showFailed","catch","showSuccessfulMessage","showFailMessage","placeholder","onChange","href","FooterComponent","TodoApp","path","exact","WelcomeComponent","BadUrlPage","serverMessage","executeFromServer","MessageService","executeGetMessage","handleSuccessfulMessage","error","handleFailureMessage","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0da6cf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const URL='https://todoappservice.herokuapp.com';\n//https://todoappservice.herokuapp.com\n//http://localhost:8080","import axios from \"axios\";\nimport {URL} from '../../components/todo/Constants';\nclass MessageService{\n    executeGetMessage(){\n        //console.log('executeGetMessage');\n        return axios.get(`${URL}/todo/v1.0.1/sayHello`);\n        \n\n    }\n}\nexport default new MessageService();","import axios from 'axios';\nimport {URL} from '../../components/todo/Constants';\nclass TodoService{\n    retriveAllTodos(userName){//todoappservice.herokuapp.com\n        return axios.get(`${URL}/users/${userName}/todos`)\n    }\n    retriveTodo(userName,todoId){\n        return axios.get(`${URL}/users/${userName}/todos/${todoId}`)\n    }\n    deleteTodo(userName,todoId){\n        return axios.delete(`${URL}/users/${userName}/todos/${todoId}`);\n    }\n    updateTodo(userName,todoId,todo){\n        return axios.put(`${URL}/users/${userName}/todos/${todoId}`,todo);\n    } \n    createTodo(userName,todo){\n        return axios.post(`${URL}/users/${userName}/todos`,todo);\n    }\n}\nexport default new TodoService();","import axios from 'axios';\nimport {URL} from '../../components/todo/Constants'\nclass AuthenticationService{\n    registerSuccessfulLogin(username,password){\n        sessionStorage.setItem('authenticatedUser',username);\n        this.setupAxiosInterceptor(this.createToken(username,password));\n    }\n    registerSuccessfulLoginForJWT(username,token){\n        sessionStorage.setItem('authenticatedUser',username);\n        this.setupAxiosInterceptor(this.createJWTToken(token));\n    }\n    getLoggedInUserName(){\n        return sessionStorage.getItem('authenticatedUser');\n    }\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n      executeAuthService(username,password){\n        return axios.get(`${URL}/basicAuth`,\n        {headers:{authorization:this.createToken(username,password)}}\n        );\n    }\n    executeJWTAuthenticateService(username,password){\n        return axios.post(`${URL}/authenticate`,{\n            username,\n            password\n        });\n    }\n    createToken(username,password){\n        return 'Basic '+ window.btoa( username+':'+password);\n    }\n    createJWTToken(token){\n        return 'Bearer '+ token;\n    }\n    setupAxiosInterceptor(token){\n        axios.interceptors.request.use(\n            (config)=>{\n                // if(this.getLoggedInUserName()!=null){\n                    config.headers.authorization = token;\n                // } \n                return config;\n            }\n            \n        );\n    }\n}\nexport default new AuthenticationService();","import React,{Component} from 'react';\nimport TodoService from '../../api/todo/TodoService.js'\nimport AuthenticationService from '../todo/AuthenticationService.js';\n \nimport { Button } from 'semantic-ui-react';\nclass TodosComponent extends Component{\n    componentDidMount(){\n        this.retriveAllTodos();        \n    }\n    deleteTodo=(todoId)=>{\n        let userName = AuthenticationService.getLoggedInUserName();\n        TodoService.deleteTodo(userName,todoId)\n        .then(()=>{\n            this.setState({message:'delete successfully'})\n        }).finally(()=>{\n            this.retriveAllTodos();\n        });\n    }\n    insertTodo(){\n        let userName = AuthenticationService.getLoggedInUserName();\n\n        this.props.history.push(`/todoes/-1`);\n    }\n    updateTodo = (todoId)=>{\n        let userName = AuthenticationService.getLoggedInUserName();\n        console.log('update'+' user '+userName+' id '+todoId);\n        this.props.history.push(`/todoes/${todoId}`);\n\n    }\n    retriveAllTodos(){\n        let userName = AuthenticationService.getLoggedInUserName();\n        TodoService.retriveAllTodos(userName)\n        .then(response=>{this.setState({todoes:response.data});});\n    }\n    constructor(){\n        super();\n        this.state={\n            todoes:[],\n            message:null\n        }        \n    }\n    render(){\n        return <article>\n            { this.state.message &&<div className=\"ui success message\">\n                <div className=\"content\">\n                    <div className=\"header\">operation done successfully</div>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n            }\n\n            <table className=\"ui celled table\">\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>description</th>\n                        <th>done</th>\n                        <th>target date</th>\n                        <th>update</th>\n                        <th>delete</th>\n                    </tr>    \n                </thead>\n                <tbody>\n                        {\n                            this.state.todoes.map(item=>{\n                                    return  <tr key={item.id}>\n                                                <td>{item.id}</td>\n                                                <td>{item.description}</td>\n                                                <td>{item.done.toString()}</td>\n                                                <td>{item.targetDate.toString()}</td>\n                                                <td><Button \n                                                onClick={()=>{this.updateTodo(item.id)}}\n                                                className=\"positive ui button\">update</Button></td>\n                                                <td><Button \n                                                onClick={()=>{this.deleteTodo(item.id)}}\n                                                className=\"negative ui button\">delete</Button></td>\n                                            </tr>\n                                    }\n                             )\n                        }\n                </tbody>\n                \n            </table>\n            <Button  onClick={()=>{this.insertTodo()}}\n                     className=\"positive ui button\">add </Button>\n\n            </article>\n    }\n}\nexport default TodosComponent;","import React,{Component} from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport moment from 'moment';\nimport todoService from '../../api/todo/TodoService.js';\nimport authenticationService from '../../components/todo/AuthenticationService.js';\nimport { Button } from 'semantic-ui-react';\n\nclass TodoComponent extends Component{\n    componentDidMount(){\n        let userName = authenticationService.getLoggedInUserName();\n        if(this.state.id===-1){\n            return;\n        }else{\n            todoService.retriveTodo(userName,this.state.id)\n            .then(response =>{\n                let {id,description,targetDate}=response.data;\n                this.setState({\n                    id:id,\n                    description:description,\n                    targetDate:moment(targetDate).format('YYYY-MM-DD')\n                });\n            })\n        }\n        \n        \n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            id:this.props.match.params.id,        \n            description:'',\n            targetDate:moment(new Date()).format('YYYY-MM-DD')\n        }\n    }\n    submitForm =(values)=>{\n        let userName = authenticationService.getLoggedInUserName();\n        \n        if(this.state.id==-1){\n            todoService.createTodo(userName,{\n                id: -1,\n                userName:userName,\n                description:values.description,\n                targetDate:values.targetDate\n            }).then(()=>{\n                this.props.history.push(`/todoes`);\n            });\n        }else{\n            todoService.updateTodo(userName,this.state.id,{\n                id: this.state.id,\n                userName:userName,\n                description:values.description,\n                targetDate:values.targetDate\n            }).then(()=>{\n                this.props.history.push(`/todoes`);\n            });\n        } \n         \n    }\n    validate =(values)=>{\n        let errors = {};\n        if(!values.description){\n            errors.description='Please Enter a description value'\n        }else if(values.description.length<5){\n            errors.description='Please Enter at least 5 characters for description'\n        }\n        let momentTargetDate= moment(values.targetDate);\n        \n        if(!momentTargetDate.isValid()){\n            errors.targetDate='Please Enter a valid target date';    \n        }\n        return errors;\n    }\n    render(){\n        let {id,description,targetDate} = this.state;\n     return <div className=\"mainContent\">\n        \n        <Formik initialValues={{description:description,\n                                targetDate:targetDate}}\n                onSubmit={this.submitForm}\n                validate={this.validate}\n                validateOnBlur={false}\n                validateOnChange={false}\n                enableReinitialize={true}                >\n            {\n                (props) => (\n                    <Form className=\"formClass ui form\" style={{border: 'antiquewhite'}}>\n                        <ErrorMessage name=\"description\" component=\"div\" \n                            className=\"ui error message\" style={{display:'block'}}/>\n                        <ErrorMessage name=\"targetDate\" component=\"div\" \n                            className=\"ui error message\" style={{display:'block'}}/>\n                                        \n                        <fieldset> \n                            <div className=\"field\">\n                                <label>description</label>\n                                <Field type=\"text\" name=\"description\"></Field>\n                            </div>\n                            <div className=\"field\">\n                                <label>target Date</label>\n                                <Field type=\"date\" name=\"targetDate\"></Field>\n                            </div>\n                            <div>\n                                <button className=\"ui button\" type=\"submit\">Save</button>    \n                            </div>\n                            \n                        </fieldset>    \n                    </Form>\n                    \n                )\n                    \n            }\n                        \n        </Formik>\n    </div>\n    };\n}\nexport default TodoComponent; ","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass HeaderComponent extends Component{\n    state={\n        homeActive:true,\n        todoActive:false,\n        loginActive:false,\n        logoutActive:false\n    }\n    toggleLink=(event)=>{\n        switch (event.target.name) {\n            case \"home\":\n                this.setState({homeActive:true,todoActive:false,loginActive:false,logoutActive:false});\n                \n                break;\n            case \"todo\":\n                this.setState({homeActive:false,todoActive:true,loginActive:false,logoutActive:false});\n                break;\n            case \"login\":\n                this.setState({homeActive:false,todoActive:false,loginActive:true,logoutActive:false});    \n                break;\n            case \"logout\":{\n                AuthenticationService.logout();\n                this.setState({homeActive:false,todoActive:false,loginActive:false,logoutActive:true});\n                break;\n            }\n                \n            default:\n                this.setState({homeActive:true,todoActive:false,loginActive:false,logoutActive:false});\n                break;\n        };\n\n    }\n\n    render(){\n        return <div>\n        <div className=\"ui pointing menu\">\n            <Link name=\"home\" to=\"/\"\n            onClick={this.toggleLink} className={`item ${this.state.homeActive?\"active\":\"\" }`} >Home Page</Link>\n            <Link name=\"todo\" to=\"/todoes\"\n            onClick={ this.toggleLink} className={`item ${this.state.todoActive?\"active\":\"\" }`}>to does</Link>\n            \n            <div className=\"right menu\">\n                <Link name=\"login\" to=\"/login\"\n                onClick={this.toggleLink} className={`item ${this.state.loginActive?\"active\":\"\" }`}>login</Link>\n                <Link name=\"logout\" to=\"/logout\"\n                onClick={this.toggleLink} className={`item ${this.state.logoutActive?\"active\":\"\" }`}>logout</Link>\n            </div>\n        </div>\n        <h1/>          \n    </div>\n\n    }\n}\nexport default HeaderComponent; ","import React,{Component} from 'react';\nclass LogOutComponent extends Component{\n    render(){\n        return  <article>\n                    <h1>you are logged out</h1>\n                    <div className=\"container\">Thank you for using our application</div>\n                </article>\n    }\n}\nexport default LogOutComponent;","import React,{Component} from 'react';\nimport authenticationService from './AuthenticationService.js'\n\nclass LogInComponent extends Component{\n    constructor(props){\n        super(props); \n        this.state={\n            username:'',\n            password:'',\n            showSuccessful:false,\n            showFailed:false\n        }\n    }\n    handleChanged=(event)=>{\n        console.log(event.target.value);\n        this.setState({[event.target.name]:event.target.value});\n    }\n    loginClicked = ()=>{\n        authenticationService.executeJWTAuthenticateService(this.state.username,this.state.password)\n        .then((response)=>{\n            sessionStorage.setItem('authenticatedUser',this.state.username);\n            authenticationService.setupAxiosInterceptor('Bearer '+ response.data.token);\n            //authenticationService.registerSuccessfulLoginForJWT(this.state.username,response.data.token);\n            this.props.history.push(`/welcome/${this.state.username}`);\n            this.setState({showSuccessful:true,showFailed:false});\n            \n        }).catch(()=>{\n            this.setState({showSuccessful:false});\n            this.setState({showFailed:true});    \n            \n        });\n\n    }\n    showSuccessfulMessage=()=>{\n        if(this.state.showSuccessful===true){\n            return <div>login successfull</div>;\n        }else{\n            return <div></div>;\n        }\n    }\n    showFailMessage=()=>{\n        if(this.state.showFailed===true){\n            return <div>invalid username or password</div>;\n        }else{\n            return <div></div>;\n        }\n    }\n    render(){\n        return (\n            \n            <div className=\"mainContent\">\n                <div className=\"ui middle aligned center aligned grid\">\n                <div className=\"column\">\n                    <h2 className=\"ui teal image header\">\n                        <div className=\"content\">\n                            Log-in to your account\n                        </div>\n                    </h2>\n                <form className=\"ui large form\">\n                    <div className=\"ui stacked segment\">\n                    <div className=\"field\">\n                        <div className=\"ui left icon input\">\n                            <i className=\"user icon\"></i>\n                            <input type=\"text\" name=\"username\" value={this.state.username}\n                             placeholder=\"user name\" onChange={this.handleChanged}></input>\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <div className=\"ui left icon input\">\n                        <i className=\"lock icon\"></i>\n                        <input type=\"password\" name=\"password\" \n                        onChange={this.handleChanged} value={this.state.password} placeholder=\"Password\"></input>\n                        </div>\n                    </div>\n                        <div className=\"ui fluid large teal submit button\" onClick={this.loginClicked}>\n                            Login\n                        </div>\n                    </div>\n            \n                    <div className=\"ui error message\" style={{display: this.state.showFailed ?'block':'none'}}>\n                        {this.showSuccessfulMessage()}\n                        {this.showFailMessage()}\n                    </div>\n            \n                </form>\n            \n                <div className=\"ui message\">\n                    New to us? <a href=\"#\">Sign Up</a>\n                </div>\n                </div>\n          </div>\n        </div>\n            \n        );\n    }\n\n\n}\nexport default LogInComponent; ","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass FooterComponent extends Component{\n    render(){\n        return <footer className=\"footer\">\n                <span>All Rights is reserved 2020</span>\n        </footer>\n    }\n}\nexport default FooterComponent; ","import React,{Component} from 'react';\nimport {BrowserRouter as Router,Route,Switch,Link} from 'react-router-dom';\nimport MessageService from '../../api/todo/MessageService.js'; \nimport TodosComponent from '../todo/TodosComponent';\nimport TodoComponent from '../todo/TodoComponent'; \nimport HeaderComponent from '../todo/HeaderComponent';\nimport LogOutComponent from '../todo/LogOutComponent';\nimport LogInComponent from '../todo/LogInComponent';\nimport FooterComponent from '../todo/FooterComponent';\nclass TodoApp extends Component{ \n    render(){\n        return (\n            <div className=\"todoApp\">\n                <Router>\n                    <>  \n                        <HeaderComponent/>\n                        <Switch>\n                            <Route path=\"/\" exact component={LogInComponent}/>\n                            <Route path=\"/login\" component={LogInComponent}/>\n                            <Route path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <Route path=\"/todoes/:id\" component={TodoComponent}/>\n                            <Route path=\"/todoes\" component={TodosComponent}/>\n                            <Route path=\"/logout\" component={LogOutComponent}/>\n                            <Route component={BadUrlPage}/>\n                        </Switch>\n                        <FooterComponent/>\n                    </>\n                </Router>\n\n            </div>\n        );\n    }\n}\n\n\nclass BadUrlPage extends Component{\n    render(){\n        return <div>Bad Url page</div>\n    }\n}\n\nclass WelcomeComponent extends Component{\n    state={serverMessage:''}\n    executeFromServer = ()=>{\n        MessageService.executeGetMessage()\n        .then((response)=>this.handleSuccessfulMessage(response))\n        .catch(error=>this.handleFailureMessage(error));\n        // .finally()\n        // this.setState({serverMessage:''});\n    }\n    handleSuccessfulMessage=(response)=>{\n        this.setState({serverMessage:response.data.message})\n    }\n    handleFailureMessage=(error)=>{\n         let errorMessage='';\n         if(error.message){\n             this.setState({serverMessage:error.message});\n         }   \n         if(error.message.data){\n             this.setState({serverMessage:error.message.data});\n         }\n    }\n    render(){\n        return (<article> \n            welcome  {this.props.match.params.name} \n            to manage todoes click <Link to=\"/todoes\" >here</Link><br/>\n            <button onClick={this.executeFromServer} className=\"ui button\">get message from api</button>\n            <br/>message from api is {this.state.serverMessage}\n            </article>);\n    }\n}\n\n\nexport default TodoApp;","import React from 'react';\nimport TodoApp from './components/todo/TodoApp';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <TodoApp/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}