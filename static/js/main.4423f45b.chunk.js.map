{"version":3,"sources":["logo.svg","components/todo/Constants.js","api/todo/MessageService.js","api/todo/TodoService.js","components/todo/AuthenticationService.js","components/todo/TodosComponent.jsx","components/todo/TodoComponent.jsx","components/todo/HeaderComponent.jsx","components/todo/LogOutComponent.jsx","components/todo/LogInComponent.jsx","components/todo/FooterComponent.jsx","components/todo/HomePageComponent.jsx","components/todo/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","axios","get","userName","todoId","delete","todo","put","post","username","password","sessionStorage","setItem","this","setupAxiosInterceptor","createToken","token","createJWTToken","getItem","removeItem","headers","authorization","window","btoa","interceptors","request","use","config","getLoggedInUserName","TodosComponent","deleteTodo","AuthenticationService","TodoService","then","setState","message","catch","serverMessage","finally","retriveAllTodos","updateTodo","console","log","props","history","push","state","todoes","response","data","className","map","item","key","id","description","done","toString","targetDate","Button","onClick","insertTodo","Component","TodoComponent","display","submitForm","values","authenticationService","todoService","createTodo","error","handleFailureMessage","validate","errors","length","moment","isValid","match","params","Date","format","retriveTodo","status","style","initialValues","onSubmit","validateOnBlur","validateOnChange","enableReinitialize","border","name","component","type","HeaderComponent","homeActive","todoActive","loginActive","logoutActive","toggleLink","event","target","logout","to","LogOutComponent","LogInComponent","handleChanged","value","loginClicked","executeJWTAuthenticateService","registerSuccessfulLoginForJWT","showSuccessful","showFailed","showSuccessfulMessage","showFailMessage","placeholder","onChange","href","FooterComponent","HomePageComponent","Table","width","colSpan","TodoApp","path","exact","WelcomeComponent","BadUrlPage","executeFromServer","MessageService","executeGetMessage","handleSuccessfulMessage","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4423f45b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const URL='https://todoappservice.herokuapp.com';\n//https://todoappservice.herokuapp.com\n//http://localhost:8080","import axios from \"axios\";\nimport {URL} from '../../components/todo/Constants';\nclass MessageService{\n    executeGetMessage(){\n        //console.log('executeGetMessage');\n        return axios.get(`${URL}/todo/v1.0.1/sayHello`);\n        \n\n    }\n}\nexport default new MessageService();","import axios from 'axios';\nimport {URL} from '../../components/todo/Constants';\nclass TodoService{\n    retriveAllTodos(userName){\n        return axios.get(`${URL}/users/${userName}/todos`)\n    }\n    retriveTodo(userName,todoId){\n        return axios.get(`${URL}/users/${userName}/todos/${todoId}`)\n    }\n    deleteTodo(userName,todoId){\n        return axios.delete(`${URL}/users/${userName}/todos/${todoId}`);\n    }\n    updateTodo(userName,todoId,todo){\n        return axios.put(`${URL}/users/${userName}/todos/${todoId}`,todo);\n    } \n    createTodo(userName,todo){\n        return axios.post(`${URL}/users/${userName}/todos`,todo);\n    }\n}\nexport default new TodoService();","import axios from 'axios';\nimport {URL} from '../../components/todo/Constants'\nclass AuthenticationService{\n    registerSuccessfulLogin(username,password){\n        sessionStorage.setItem('authenticatedUser',username);\n        this.setupAxiosInterceptor(this.createToken(username,password),username);\n    }\n    registerSuccessfulLoginForJWT(username,token){\n        sessionStorage.setItem('authenticatedUser',username);\n        this.setupAxiosInterceptor(this.createJWTToken(token),username);\n    }\n    getLoggedInUserName(){\n        return sessionStorage.getItem('authenticatedUser');\n    }\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n      executeAuthService(username,password){\n        return axios.get(`${URL}/basicAuth`,\n        {headers:{authorization:this.createToken(username,password)}}\n        );\n    }\n    executeJWTAuthenticateService(username,password){\n        return axios.post(`${URL}/authenticate`,{\n            username,\n            password\n        });\n    }\n    createToken(username,password){\n        return 'Basic '+ window.btoa( username+':'+password);\n    }\n    createJWTToken(token){\n        return 'Bearer '+ token;\n    }\n    setupAxiosInterceptor(token,username){\n        axios.interceptors.request.use(\n            (config)=>{\n                if(this.getLoggedInUserName()==username){\n                    config.headers.authorization = token;\n                } \n                return config;\n            }\n            \n        );\n    }\n}\nexport default new AuthenticationService();","import React,{Component} from 'react';\nimport TodoService from '../../api/todo/TodoService.js'\nimport AuthenticationService from '../todo/AuthenticationService.js';\n \nimport { Button } from 'semantic-ui-react';\nclass TodosComponent extends Component{\n    componentDidMount(){\n        this.retriveAllTodos();        \n    }\n    deleteTodo=(todoId)=>{\n        let userName = AuthenticationService.getLoggedInUserName();\n        TodoService.deleteTodo(userName,todoId)\n        .then(()=>{\n            this.setState({message:'delete successfully'})\n        }).catch(()=>{\n            this.setState({serverMessage:\"you don't have permission to do this action\"});\n        })\n        .finally(()=>{\n            this.retriveAllTodos();\n        });\n    }\n    insertTodo(){\n        let userName = AuthenticationService.getLoggedInUserName();\n\n        this.props.history.push(`/todoes/-1`);\n    }\n    updateTodo = (todoId)=>{\n        let userName = AuthenticationService.getLoggedInUserName();\n        console.log('update'+' user '+userName+' id '+todoId);\n        this.props.history.push(`/todoes/${todoId}`);\n\n    }\n    retriveAllTodos(){\n        let userName = AuthenticationService.getLoggedInUserName();\n        TodoService.retriveAllTodos(userName)\n        .then(response=>{this.setState({todoes:response.data});});\n    }\n    constructor(){\n        super();\n        this.state={\n            todoes:[],\n            message:null,\n            serverMessage:null\n\n        }        \n    }\n    render(){\n        return <article>\n            { this.state.message &&<div className=\"ui success message\">\n                <div className=\"content\">\n                    <div className=\"header\">operation done successfully</div>\n                    <p>{this.state.message}</p>\n                </div>\n            </div>\n            }\n            {this.state.serverMessage&&<div className=\"ui error message\"\n                >{this.state.serverMessage}</div>\n            }\n        \n\n            <table className=\"ui celled table\">\n                <thead>\n                    <tr>\n                        <th>id</th>\n                        <th>description</th>\n                        <th>done</th>\n                        <th>target date</th>\n                        <th>update</th>\n                        <th>delete</th>\n                    </tr>    \n                </thead>\n                <tbody>\n                        {\n                            this.state.todoes.map(item=>{\n                                    return  <tr key={item.id}>\n                                                <td>{item.id}</td>\n                                                <td>{item.description}</td>\n                                                <td>{item.done.toString()}</td>\n                                                <td>{item.targetDate.toString()}</td>\n                                                <td><Button \n                                                onClick={()=>{this.updateTodo(item.id)}}\n                                                className=\"positive ui button\">update</Button></td>\n                                                <td><Button \n                                                onClick={()=>{this.deleteTodo(item.id)}}\n                                                className=\"negative ui button\">delete</Button></td>\n                                            </tr>\n                                    }\n                             )\n                        }\n                </tbody>\n                \n            </table>\n            <Button  onClick={()=>{this.insertTodo()}}\n                     className=\"positive ui button\">add </Button>\n\n            </article>\n    }\n}\nexport default TodosComponent;","import React,{Component} from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport moment from 'moment';\nimport todoService from '../../api/todo/TodoService.js';\nimport authenticationService from '../../components/todo/AuthenticationService.js';\nimport { Button } from 'semantic-ui-react';\n\nclass TodoComponent extends Component{\n    state={\n        serverMessage:'',\n        display:false};\n    componentDidMount(){\n        let userName = authenticationService.getLoggedInUserName();\n        if(this.state.id===-1){\n            return;\n        }else{\n            todoService.retriveTodo(userName,this.state.id)\n            .then(response =>{\n                let {id,description,targetDate}=response.data;\n                this.setState({\n                    id:id,\n                    description:description,\n                    targetDate:moment(targetDate).format('YYYY-MM-DD')\n                });\n            })\n            \n        }\n        \n        \n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            id:this.props.match.params.id,        \n            description:'',\n            targetDate:moment(new Date()).format('YYYY-MM-DD')\n        }\n    }\n    submitForm =(values)=>{\n        let userName = authenticationService.getLoggedInUserName();\n        \n        if(this.state.id==-1){\n            todoService.createTodo(userName,{\n                id: -1,\n                userName:userName,\n                description:values.description,\n                targetDate:values.targetDate\n            }).then(()=>{\n                this.props.history.push(`/todoes`);\n            });\n        }else{\n            todoService.updateTodo(userName,this.state.id,{\n                id: this.state.id,\n                userName:userName,\n                description:values.description,\n                targetDate:values.targetDate\n            }).then(()=>{\n                this.props.history.push(`/todoes`);\n            })\n            .catch(error=>\n                {\n                    this.handleFailureMessage(error);\n                });\n        }\n         \n    }\n    handleFailureMessage(message){\n        if(message.response.status==403){\n            this.setState({serverMessage:\"you don't have permission to do this action\",\n        display:true});\n        }\n    }\n    validate =(values)=>{\n        let errors = {};\n        if(!values.description){\n            errors.description='Please Enter a description value'\n        }else if(values.description.length<5){\n            errors.description='Please Enter at least 5 characters for description'\n        }\n        let momentTargetDate= moment(values.targetDate);\n        \n        if(!momentTargetDate.isValid()){\n            errors.targetDate='Please Enter a valid target date';    \n        }\n        return errors;\n    }\n    render(){\n        let {id,description,targetDate} = this.state;\n     return <div className=\"mainContent\">\n        <div\n                className=\"ui error message\" style={{display:this.state.display?'block':'none'}}\n                >{this.state.serverMessage}</div>\n        <Formik initialValues={{description:description,\n                                targetDate:targetDate}}\n                onSubmit={this.submitForm}\n                validate={this.validate}\n                validateOnBlur={false}\n                validateOnChange={false}\n                enableReinitialize={true}                >\n            {\n                \n                (props) => (\n                    <Form className=\"formClass ui form\" style={{border: 'antiquewhite'}}>\n                        <ErrorMessage name=\"description\" component=\"div\" \n                            className=\"ui error message\" style={{display:'block'}}/>\n                        <ErrorMessage name=\"targetDate\" component=\"div\" \n                            className=\"ui error message\" style={{display:'block'}}/>\n                                        \n                        <fieldset> \n                            <div className=\"field\">\n                                <label>description</label>\n                                <Field type=\"text\" name=\"description\"></Field>\n                            </div>\n                            <div className=\"field\">\n                                <label>target Date</label>\n                                <Field type=\"date\" name=\"targetDate\"></Field>\n                            </div>\n                            \n                            <div>\n                                <button className=\"ui button\" type=\"submit\">Save</button>    \n                            </div>\n                            \n                        </fieldset>    \n                    </Form>\n                    \n                )\n                    \n            }\n                        \n        </Formik>\n    </div>\n    };\n}\nexport default TodoComponent; ","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass HeaderComponent extends Component{\n    state={\n        homeActive:true,\n        todoActive:false,\n        loginActive:false,\n        logoutActive:false\n    }\n    toggleLink=(event)=>{\n        switch (event.target.name) {\n            case \"home\":\n                this.setState({homeActive:true,todoActive:false,loginActive:false,logoutActive:false});\n                \n                break;\n            case \"todo\":\n                this.setState({homeActive:false,todoActive:true,loginActive:false,logoutActive:false});\n                break;\n            case \"login\":\n                this.setState({homeActive:false,todoActive:false,loginActive:true,logoutActive:false});    \n                break;\n            case \"logout\":{\n                AuthenticationService.logout();\n                this.setState({homeActive:false,todoActive:false,loginActive:false,logoutActive:true});\n                break;\n            }\n                \n            default:\n                this.setState({homeActive:true,todoActive:false,loginActive:false,logoutActive:false});\n                break;\n        };\n\n    }\n\n    render(){\n        return <div>\n        <div className=\"ui pointing menu\">\n            <Link name=\"home\" to=\"/\"\n            onClick={this.toggleLink} className={`item ${this.state.homeActive?\"active\":\"\" }`} >Home Page</Link>\n            <Link name=\"todo\" to=\"/todoes\"\n            onClick={ this.toggleLink} className={`item ${this.state.todoActive?\"active\":\"\" }`}>to does</Link>\n            \n            <div className=\"right menu\">\n                <Link name=\"login\" to=\"/login\"\n                onClick={this.toggleLink} className={`item ${this.state.loginActive?\"active\":\"\" }`}>login</Link>\n                <Link name=\"logout\" to=\"/logout\"\n                onClick={this.toggleLink} className={`item ${this.state.logoutActive?\"active\":\"\" }`}>logout</Link>\n            </div>\n        </div>\n        <h1/>          \n    </div>\n\n    }\n}\nexport default HeaderComponent; ","import React,{Component} from 'react';\nclass LogOutComponent extends Component{\n    render(){\n        return  <article>\n                    <h1>you are logged out</h1>\n                    <div className=\"container\">Thank you for using our application</div>\n                </article>\n    }\n}\nexport default LogOutComponent;","import React,{Component} from 'react';\nimport authenticationService from './AuthenticationService.js'\n\nclass LogInComponent extends Component{\n    constructor(props){\n        super(props); \n        this.state={\n            username:'',\n            password:'',\n            showSuccessful:false,\n            showFailed:false\n        }\n    }\n    handleChanged=(event)=>{\n        console.log(event.target.value);\n        this.setState({[event.target.name]:event.target.value});\n    }\n    loginClicked = ()=>{\n        authenticationService.executeJWTAuthenticateService(this.state.username,this.state.password)\n        .then((response)=>{\n            sessionStorage.setItem('authenticatedUser',this.state.username);\n            authenticationService.registerSuccessfulLoginForJWT(this.state.username,response.data.token);\n            this.props.history.push(`/welcome/${this.state.username}`);\n            this.setState({showSuccessful:true,showFailed:false});\n            \n        }).catch(()=>{\n            this.setState({showSuccessful:false});\n            this.setState({showFailed:true});    \n            \n        });\n\n    }\n    showSuccessfulMessage=()=>{\n        if(this.state.showSuccessful===true){\n            return <div>login successfull</div>;\n        }else{\n            return <div></div>;\n        }\n    }\n    showFailMessage=()=>{\n        if(this.state.showFailed===true){\n            return <div>invalid username or password</div>;\n        }else{\n            return <div></div>;\n        }\n    }\n    render(){\n        return (\n            \n            <div className=\"mainContent\">\n                <div className=\"ui middle aligned center aligned grid\">\n                <div className=\"column\">\n                    <h2 className=\"ui teal image header\">\n                        <div className=\"content\">\n                            Log-in to your account\n                        </div>\n                    </h2>\n                <form className=\"ui large form\">\n                    <div className=\"ui stacked segment\">\n                    <div className=\"field\">\n                        <div className=\"ui left icon input\">\n                            <i className=\"user icon\"></i>\n                            <input type=\"text\" name=\"username\" value={this.state.username}\n                             placeholder=\"user name\" onChange={this.handleChanged}></input>\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <div className=\"ui left icon input\">\n                        <i className=\"lock icon\"></i>\n                        <input type=\"password\" name=\"password\" \n                        onChange={this.handleChanged} value={this.state.password} placeholder=\"Password\"></input>\n                        </div>\n                    </div>\n                        <div className=\"ui fluid large teal submit button\" onClick={this.loginClicked}>\n                            Login\n                        </div>\n                    </div>\n            \n                    <div className=\"ui error message\" style={{display: this.state.showFailed ?'block':'none'}}>\n                        {this.showSuccessfulMessage()}\n                        {this.showFailMessage()}\n                    </div>\n            \n                </form>\n            \n                <div className=\"ui message\">\n                    New to us? <a href=\"#\">Sign Up</a>\n                </div>\n                </div>\n          </div>\n        </div>\n            \n        );\n    }\n\n\n}\nexport default LogInComponent; ","import React,{Component} from 'react';\n\nclass FooterComponent extends Component{\n    render(){\n        return <footer className=\"footer\">\n                <span>All Rights is reserved 2020</span>\n        </footer>\n    }\n}\nexport default FooterComponent; ","import React,{Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nclass HomePageComponent extends Component{\n    render(){\n        return  <article>\n                    <h1>About this application</h1>\n                    <div className=\"container\">\n                        <div>this is a sample crud application to create todo tasks\n                        I secure this application by using Spring Security and help \n                        of JWT framework</div>\n\n                        <div>the git hub page for backend one is <a href=\"https://github.com/sinapouya/todoappbackend\" target=\"_blank\">backend git hub page</a></div>\n\n                        <h3>backend project is done by these technologies</h3>\n                        <ul>\n                            <li>java</li>\n                            <li>spring-boot</li>\n                            <li>spring Security</li>\n                            <li>JWT framework</li>\n                            <li>jpa/hibernate,Spring Data</li>           \n                            <li>for database i use h2</li>\n                        </ul>\n                        <div>and for ui of this project is <a href=\"https://github.com/sinapouya/todoAppUI\" target=\"_blank\">ui git hub page</a>\n                        for ui i use these techs\n                        </div>\n                        <ul>\n                            <li>react</li>\n                            <li>axios</li>\n                            <li>semantic-ui</li>\n                        </ul>\n                        <div>\n                        <div>To login use this <Link to=\"/login\" >login</Link></div>    \n                        \n                        <h3>user name and password are</h3>\n                        \n                        </div>\n                        <Table style={{width:'18%'}}>\n                            <tr><td>username</td><td>sina</td></tr>\n                            <tr><td>role</td><td>admin</td></tr>\n                            <tr><td>password</td><td>Zling4u@</td></tr>\n                            <tr><td>role</td><td>admin</td></tr>\n                            \n                        </Table>\n                        \n                        <Table  style={{width:'18%'}}>\n                            <tr><td>username</td><td>user</td></tr>\n                            <tr><td>role</td><td>user</td></tr>\n                            <tr><td colSpan=\"2\">*user role cannot delete or update a todo</td></tr>\n                            <tr><td>password</td><td>passw0rd@123#123</td></tr>\n                            <tr><td>role</td><td>user</td></tr>\n                        </Table>\n                                                \n                    </div>\n                </article>\n    }\n}\nexport default HomePageComponent;","import React,{Component} from 'react';\nimport {BrowserRouter as Router,Route,Switch,Link} from 'react-router-dom';\nimport MessageService from '../../api/todo/MessageService.js'; \nimport TodosComponent from '../todo/TodosComponent';\nimport TodoComponent from '../todo/TodoComponent'; \nimport HeaderComponent from '../todo/HeaderComponent';\nimport LogOutComponent from '../todo/LogOutComponent';\nimport LogInComponent from '../todo/LogInComponent';\nimport FooterComponent from '../todo/FooterComponent';\nimport HomePageComponent from '../todo/HomePageComponent';\nclass TodoApp extends Component{ \n    render(){\n        return (\n            <div className=\"todoApp\">\n                <Router>\n                    <>  \n                        <HeaderComponent/>\n                        <Switch>\n                            <Route path=\"/\" exact component={HomePageComponent}/>\n                            <Route path=\"/todoAppUI\" component={HomePageComponent}/>\n                            <Route path=\"/login\" component={LogInComponent}/>\n                            <Route path=\"/welcome/:name\" component={WelcomeComponent}/>\n                            <Route path=\"/todoes/:id\" component={TodoComponent}/>\n                            <Route path=\"/todoes\" component={TodosComponent}/>\n                            <Route path=\"/logout\" component={LogOutComponent}/>\n                            <Route component={BadUrlPage}/>\n                        </Switch>\n                        <FooterComponent/>\n                    </>\n                </Router>\n\n            </div>\n        );\n    }\n}\n\n\nclass BadUrlPage extends Component{\n    render(){\n        return <div>Bad Url page</div>\n    }\n}\n\nclass WelcomeComponent extends Component{\n    state={serverMessage:''}\n    executeFromServer = ()=>{\n        MessageService.executeGetMessage()\n        .then((response)=>this.handleSuccessfulMessage(response))\n        .catch(error=>this.handleFailureMessage(error));\n        \n    }\n    handleSuccessfulMessage=(response)=>{\n        this.setState({serverMessage:response.data.message})\n    }\n    handleFailureMessage=(error)=>{\n         let errorMessage='';\n         if(error.message){\n             this.setState({serverMessage:error.message});\n         }   \n         if(error.message.data){\n             this.setState({serverMessage:error.message.data});\n         }\n    }\n    render(){\n        return (<article> \n            <h1>welcome</h1>  <h2>{this.props.match.params.name}</h2> \n            to manage todoes click <br/>\n            <Link to=\"/todoes\" >here</Link><br/>\n            \n            </article>);\n    }\n}\n\n\nexport default TodoApp;","import React from 'react';\nimport TodoApp from './components/todo/TodoApp';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <TodoApp/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}